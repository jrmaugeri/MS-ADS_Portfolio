### FILE INFO
# Author: Joseph Maugeri
# Class : IST 719
# Purpose : Final Project R Code to generate poster elements
# Version : 1.0
#
### REQUIRING PACKAGES #########################################################
## Make sure you have installed the following packages
require(dplyr)
require(plotrix)
require(RColorBrewer)
require(ggplot2)
require(ggmap)
require(maps)
require(lattice)
require(scatterplot3d)
### Setting my dir and reading in file #########################################
"https://data.ny.gov/Energy-Environment/Spill-Incidents/u44d-k5fk/data"
my.dir <-  "c:\\Users\\Maugeri\\Desktop\\IST719\\"
### READING IN THE SPILLS DATASET ##############################################
spills <- read.csv(file=paste0(my.dir
, "Spill_Incidents.csv")
, header = TRUE
, stringsAsFactors = FALSE
, na.strings =c(""," ","NA"))
sp <- spills
### PRE-ANALYSIS TRANSFORMATIONS ###############################################
# Transforming Dates
sp$Spill.Date <- as.Date(sp$Spill.Date, format = "%m/%d/%Y", optional = TRUE)
sp$Received.Date <- as.Date(sp$Received.Date, format = "%m/%d/%Y", optional = TRUE)
sp$Close.Date <- as.Date(sp$Close.Date, format = "%m/%d/%Y", optional = TRUE)
sp$Year.Month.Rec. <- format(sp$Received.Date, "%Y-%m")
sp$Year.Rec. <- format(sp$Received.Date, "%Y")
sp$Year.Month.Spill <- format(sp$Spill.Date, "%Y-%m")
sp$Year.Spill <- format(sp$Spill.Date, "%Y")
# Reducing size of sp dataset to last 20 years
sp <- subset.data.frame(sp, Spill.Date > "2000-01-01")
# Dropping rows with "Missing Code in Old Data = Must be Fixed"
nrow(sp)
src_list <- sp$Source
src_list <- src_list %>% unique()
print( src_list)
# removing the 14th index of the list ( which is missing code in data)
sp <- sp[sp$Source != src_list[14],]
# checking to see if there are any rows left
nrow(sp[sp$Source == src_list[14],])
# creating datediff columns for received date and closed date from spill date
sp$Diff.Days.O2C = as.numeric(difftime(sp$Close.Date, sp$Spill.Date, units = "days"))
sp$Diff.Days.R2C = as.numeric(difftime(sp$Received.Date, sp$Spill.Date, units = "days"))
spdaycalc1 <- sp$Diff.Days.O2C
for (i in nrow(spdaycalc1))
{
if (spdaycalc1[i]<0) {spdaycalc1[i] = 0}
else{spdaycalc1[i] = spdaycalc1[i]}
}
sp$Diff.Days.O2C <- spdaycalc1
# cleaning the datediff columns
spdaycalc2 <- sp$Diff.Days.R2C
for (i in nrow(spdaycalc2))
{
if (spdaycalc2[i]<0) {spdaycalc2[i] = 0}
else{spdaycalc2[i] = spdaycalc2[i]}
}
sp$Diff.Days.R2C <- spdaycalc2
# Moving Outliers of all unit data to a new dataset.
sp_TopSpills <- sp[sp$Quantity > 2000000,]
sp <- sp[sp$Quantity < 2000000,]
# Dividing into separate dataframes by units
spg <- sp[sp$Units == "Gallons",]
splb <- sp[sp$Units == "Pounds",]
sp_ <- sp[is.na(sp$Units) == TRUE,]
### Testing if my data passes the formula this must be greater than 100 (it is 200)
str(sp)
summary(sp)
(ncol(sp) * 4) * (nrow(sp)/100)
sp[sp$Quantity > 10000000000,]
### TIMELINE OF TOP 20 SPILLS ##################################################
sp_TopSpills <- sp_TopSpills[order(-sp_TopSpills$Quantity),]
topIDs <- c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25)
sp_TopSpills$IDdec <- topIDs
LargestSpill <- sp_TopSpills[1,]
SpillOutliers <- sp_TopSpills[1:5,]
#removing the outlier for the visualization
sp_TopSpills <- sp_TopSpills[-1,]
#text for visualization
sp_TopSpills$Text <- sp_TopSpills %>% paste0(c(sp_TopSpills$IDdec))
sp_TopSpills <- sp_TopSpills[-1,]
#text for visualization
sp_TopSpills$Text <- sp_TopSpills %>% paste0(c(sp_TopSpills$IDdec))
sp_out <- ggplot(SpillOutliers, aes(x = Spill.Date
, y = Quantity
, col = Units
,label = Material.Name)) +
geom_point(stat = "identity") +
scale_color_manual(breaks = sp$Units, values = c("#6DE800","#E7004A","#FFFFFF")) +
ggtitle("5 LargestS Spills In New York (Outliers)") +
geom_text(hjust=-.15, vjust=.45) +
theme(axis.ticks.y = element_blank()
,panel.grid.minor = element_blank()
,panel.grid.major.y = element_line(linewidth = .75, color = "#8B0000" )
,panel.background = element_rect(fill = c("#FFF5EE"))
,plot.background = element_rect(fill = c("#DEEBFF"))
,axis.text = element_text(family = "serif", face = "bold",vjust = 1.2, size = 10)
,axis.title = element_text(family = "serif", face = "bold",vjust = 1.2, size = 20)
,plot.title = element_text(family = "serif", face = "bold", hjust = 1.2, size = 40))
sp_out
sp_t20point <- ggplot(sp_TopSpills, aes(x = Spill.Date
, y = Quantity
, color = Units
,label = Material.Name)) +
geom_point(stat = "identity") +
scale_color_manual(breaks = sp$Units, values = c("#6DE800","#E7004A","#FFFFFF")) +
ggtitle("Top 20 Spills since 2000") +
geom_text(hjust=-.15, vjust=.9) +
theme(axis.ticks.y = element_blank()
,panel.grid.minor = element_blank()
,panel.grid.major.y = element_line(linewidth = .75, color = "#8B0000" )
,panel.background = element_rect(fill = c("#FFF5EE"))
,plot.background = element_rect(fill = c("#DEEBFF"))
,axis.ticks.y.left = element_line(linewidth = 1.5)
,axis.title.x.bottom = element_text(family = "serif", face = "bold", size = 15)
,axis.title.y.left = element_text(family = "serif", face = "bold", size = 15)
,axis.text = element_text(family = "serif", face = "bold",vjust = 1.2, size = 12)
,axis.title = element_text(family = "serif", face = "bold",vjust = 1.2, size = 20)
,plot.title = element_text(family = "serif", face = "bold", hjust = .9, size = 40))
sp_t20point
### BOXPLOT TO SHOW DISTRIBUTIONS BY UNITS #####################################
sp_box <- ggplot(sp, aes(x = Quantity, y = Units, group = Units)) +
geom_boxplot(aes(x = Quantity, y = Units, group = Units, color = Units)) +
scale_color_manual(breaks = sp$Units, values = c("#6DE800","#E7004A","#FFFFFF")) +
ggtitle("Distribution of Spills by Units") +
theme(axis.ticks.y = element_blank()
,panel.grid.minor = element_blank()
,panel.grid.major.y = element_line(linewidth = .5, color = "#8B0000" )
,panel.grid.major.x = element_line(linewidth = .5, color = "#8B0000" )
,panel.background = element_rect(fill = c("#FFF5EE"))
,plot.background = element_rect(fill = c("#DEEBFF"))
,axis.ticks.y.left = element_line(linewidth = 1.5)
,axis.title.x.bottom = element_text(family = "serif", face = "bold", size = 15)
,axis.title.y.left = element_text(family = "serif", face = "bold", size = 15)
,axis.text = element_text(family = "serif", face = "bold",vjust = 1.2, size = 12)
,axis.title = element_text(family = "serif", face = "bold",vjust = 1.2, size = 20)
,plot.title = element_text(family = "serif", face = "bold", hjust = .9, size = 40))
sp_box
### MORE EXPLORATORY GRAPHS ####################################################
spplot <- ggplot(sp)+
geom_line( aes(x = Year.Spill, y = Quantity,color = Material.Family)) +
scale_color_manual(breaks = sp$Material.Family, values = c("#30A100","#190B6E","#95001A","#9F7E00")) +
theme(axis.ticks.y = element_blank()
,panel.grid.minor = element_blank()
,panel.grid.major.y = element_line(linewidth = .5, color = "#8B0000" )
,panel.grid.major.x = element_line(linewidth = .5, color = "#8B0000" )
,panel.background = element_rect(fill = c("#FFF5EE"))
,plot.background = element_rect(fill = c("#DEEBFF"))
,axis.ticks.y.left = element_line(linewidth = 1.5)
,axis.title.x.bottom = element_text(family = "serif", face = "bold", size = 15)
,axis.title.y.left = element_text(family = "serif", face = "bold", size = 15)
,axis.text = element_text(family = "serif", face = "bold",vjust = 1.2, size = 12)
,axis.title = element_text(family = "serif", face = "bold",vjust = 1.2, size = 20)
,plot.title = element_text(family = "serif", face = "bold", hjust = .9, size = 40))
spplot
### BAR CHARTs OF QUANTIY BY SOURCE #############################################
# All units
sp_bar <- ggplot(sp,aes( x = Source, y = Quantity, group = Material.Family)) +
geom_bar(stat="identity",aes(fill = Material.Family))+
scale_fill_manual(breaks = sp$Material.Family, values = c("#30A100","#201082","#B0001F","#BC9500")) +
coord_flip()+
labs(title = "Quantity Spilled From All Unit Sources")+
theme(axis.ticks.y = element_blank()
,panel.grid.minor = element_blank()
,panel.grid.major.y = element_line(linewidth = .5, color = "#8B0000" )
,panel.grid.major.x = element_line(linewidth = .5, color = "#8B0000" )
,panel.background = element_rect(fill = c("#FFF5EE"))
,plot.background = element_rect(fill = c("#DEEBFF"))
,axis.ticks.y.left = element_line(linewidth = 1.5)
,axis.title.x.bottom = element_text(family = "serif", face = "bold", size = 15)
,axis.title.y.left = element_text(family = "serif", face = "bold", size = 15)
,axis.text = element_text(family = "serif", face = "bold",vjust = 1.2, size = 12)
,axis.title = element_text(family = "serif", face = "bold",vjust = 1.2, size = 20)
,plot.title = element_text(family = "serif", face = "bold", hjust = .9, size = 40))
sp_bar
# GALLON UNITS
spg_bar <- ggplot(spg,aes( x = Source, y = Quantity, group = Material.Family)) +
geom_bar(stat="identity",aes(fill = Material.Family))+
scale_fill_manual(breaks = sp$Material.Family, values = c("#30A100","#201082","#B0001F","#BC9500")) +
coord_flip()+
labs(title = "Quantity Spilled From Gallon Sources")+
theme(axis.ticks.y = element_blank()
,panel.grid.minor = element_blank()
,panel.grid.major.y = element_line(linewidth = .5, color = "#8B0000" )
,panel.grid.major.x = element_line(linewidth = .5, color = "#8B0000" )
,panel.background = element_rect(fill = c("#FFF5EE"))
,plot.background = element_rect(fill = c("#DEEBFF"))
,axis.ticks.y.left = element_line(linewidth = 1.5)
,axis.title.x.bottom = element_text(family = "serif", face = "bold", size = 15)
,axis.title.y.left = element_text(family = "serif", face = "bold", size = 15)
,axis.text = element_text(family = "serif", face = "bold",vjust = 1.2, size = 12)
,axis.title = element_text(family = "serif", face = "bold",vjust = 1.2, size = 20)
,plot.title = element_text(family = "serif", face = "bold", hjust = .9, size = 20))
spg_bar
# POUND UNITS
splb_bar <- ggplot(splb,aes( x = Source, y = Quantity, group = Material.Family)) +
geom_bar(stat="identity",aes(fill = Material.Family))+
scale_fill_manual(breaks = sp$Material.Family, values = c("#30A100","#201082","#B0001F","#BC9500")) +
coord_flip()+
labs(title = "Quantity Spilled From Pound Sources")+
theme(axis.ticks.y = element_blank()
,panel.grid.minor = element_blank()
,panel.grid.major.y = element_line(linewidth = .5, color = "#8B0000" )
,panel.grid.major.x = element_line(linewidth = .5, color = "#8B0000" )
,panel.background = element_rect(fill = c("#FFF5EE"))
,plot.background = element_rect(fill = c("#DEEBFF"))
,axis.ticks.y.left = element_line(linewidth = 1.5)
,axis.title.x.bottom = element_text(family = "serif", face = "bold", size = 15)
,axis.title.y.left = element_text(family = "serif", face = "bold", size = 15)
,axis.text = element_text(family = "serif", face = "bold",vjust = 1.2, size = 12)
,axis.title = element_text(family = "serif", face = "bold",vjust = 1.2, size = 20)
,plot.title = element_text(family = "serif", face = "bold", hjust = .9, size = 20))
splb_bar
# NA UNITS
sp__bar <- ggplot(sp_,aes( x = Source, y = Quantity, group = Material.Family)) +
geom_bar(stat="identity",aes(fill = Material.Family))+
scale_fill_manual(breaks = sp$Material.Family, values = c("#30A100","#201082","#B0001F","#BC9500")) +
coord_flip()+
labs(title = "Quantity Spilled From NA Units Sources")+
theme(axis.ticks.y = element_blank()
,panel.grid.minor = element_blank()
,panel.grid.major.y = element_line(linewidth = .5, color = "#8B0000" )
,panel.grid.major.x = element_line(linewidth = .5, color = "#8B0000" )
,panel.background = element_rect(fill = c("#FFF5EE"))
,plot.background = element_rect(fill = c("#DEEBFF"))
,axis.ticks.y.left = element_line(linewidth = 1.5)
,axis.title.x.bottom = element_text(family = "serif", face = "bold", size = 15)
,axis.title.y.left = element_text(family = "serif", face = "bold", size = 15)
,axis.text = element_text(family = "serif", face = "bold",vjust = 1.2, size = 12)
,axis.title = element_text(family = "serif", face = "bold",vjust = 1.2, size = 20)
,plot.title = element_text(family = "serif", face = "bold", hjust = .9, size = 20))
sp__bar
### BUBBLE PLOT OF SPILLS for GALLONS ##########################################
spg_bub <- ggplot(spg, aes(x = Spill , y = Quantity,size = Quantity, color= Material.Family))+
geom_point(alpha = 0.7)
ordered <- spg[order(spg$Quantity, decreasing = TRUE), ]
splits <- split(ordered, ordered$County)
heads <- lapply(splits, head)
do.call(rbind, heads)
#### AGGREGATING QUANTITY BY UNITS, COUNTY #####################################
# Summarizing by County and Units
spGRP <- sp %>%
dplyr::group_by(Units, County) %>%
dplyr::summarize(ctotSpill = sum(Quantity), cavgSpill = mean(Quantity))
# Initial Plot to see the data
ggplot(spGRP, aes(x = County, y = ctotSpill, color = Units)) +
geom_point() +
coord_flip() +
xlab("Date") + ylab("Total Spilled") +
ggtitle("Relationship Between County and Spillage")
# Creating Aggregate by County regardless of units, for sort column
spGRP_Tot <- sp %>%
dplyr::group_by(County) %>%
dplyr::summarize( C_Total = sum(Quantity))
# Using plyr to join the total column to the double grouped aggregate
spGRP_J <- plyr::join(spGRP, spGRP_Tot, by = "County")
# Using plyr to arrange by the Grand total that is regardless of Units
spGRP_J <- plyr::arrange(spGRP_J,by_group= desc(C_Total))
library(forcats)
# using forcats to convert to an ordered factor for graphing
spGRP_J$County <- factor(spGRP_J$County, levels = rev(unique(spGRP_J$County)), ordered=TRUE)
spGRP_J %>%
ggplot( aes(x = County, y = C_Total)) +
geom_point( aes(x = County, y = ctotSpill, color = Units)) +
coord_flip() +
xlab("County") + ylab("Total Spilled") +
ggtitle("Relationship Between County and Spillage")+
scale_color_manual(breaks = sp$Units, values = c("#6DE800","#E7004A","#FFFFFF"))+
theme(axis.ticks.y = element_blank()
,panel.grid.minor = element_blank()
,panel.grid.major.y = element_line(linewidth = .05, color = "#8B0000" )
,panel.grid.major.x = element_line(linewidth = .05, color = "#8B0000" )
,panel.background = element_rect(fill = c("#FFF5EE"))
,plot.background = element_rect(fill = c("#DEEBFF"))
,axis.ticks.y.left = element_line(linewidth = 1.5)
,axis.title.x.bottom = element_text(family = "serif", face = "bold", size = 15)
,axis.title.y.left = element_text(family = "serif", face = "bold", size = 15)
,axis.text = element_text(family = "serif", face = "bold", size = 10)
,axis.title = element_text(family = "serif", face = "bold", size = 20)
,plot.title = element_text(family = "serif", face = "bold", size = 20))
# Simple plot of total over time ( not relevant for graphing)
spPl1 <- ggplot(spGRP_J %>% dplyr::arrange(C_Total), aes(x = County, y = C_Total, group = ctotSpill)) +
geom_point() +
coord_flip() +
xlab("County") + ylab("Total Spilled") +
ggtitle("Relationship Between County and Spillage")
### MAPPING IN NEW YORK STATE SECTION ##########################################
spg_county_agg$Group.1 <- tolower(spg_county_agg$Group.1)
